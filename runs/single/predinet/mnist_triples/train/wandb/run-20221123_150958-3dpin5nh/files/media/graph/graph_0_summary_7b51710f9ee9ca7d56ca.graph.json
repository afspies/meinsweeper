{"format": "torch", "nodes": [{"name": "generator", "id": 140344863248000, "class_name": "Generator(\n  (latent_gen): Sequential(\n    (0): Linear(in_features=50, out_features=100, bias=True)\n    (1): LeakyReLU(negative_slope=0.2, inplace=True)\n    (2): Linear(in_features=100, out_features=100, bias=True)\n    (3): LeakyReLU(negative_slope=0.2, inplace=True)\n  )\n  (image_gen): Sequential(\n    (0): Reshape()\n    (1): ConvTranspose2d(100, 128, kernel_size=(4, 4), stride=(1, 1))\n    (2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (3): ReLU(inplace=True)\n    (4): ConvTranspose2d(128, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)\n    (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (6): ReLU(inplace=True)\n    (7): ConvTranspose2d(64, 32, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2), bias=False)\n    (8): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (9): ReLU(inplace=True)\n    (10): ConvTranspose2d(32, 1, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)\n    (11): Tanh()\n  )\n)", "parameters": [["latent_gen.0.weight", [100, 50]], ["latent_gen.0.bias", [100]], ["latent_gen.2.weight", [100, 100]], ["latent_gen.2.bias", [100]], ["image_gen.1.weight", [100, 128, 4, 4]], ["image_gen.1.bias", [128]], ["image_gen.2.weight", [128]], ["image_gen.2.bias", [128]], ["image_gen.4.weight", [128, 64, 4, 4]], ["image_gen.5.weight", [64]], ["image_gen.5.bias", [64]], ["image_gen.7.weight", [64, 32, 4, 4]], ["image_gen.8.weight", [32]], ["image_gen.8.bias", [32]], ["image_gen.10.weight", [32, 1, 4, 4]]], "output_shape": [[2, 3, 28, 28]], "num_parameters": [5000, 100, 10000, 100, 204800, 128, 128, 128, 131072, 64, 64, 32768, 32, 32, 512]}, {"name": "discriminator", "id": 140344863248144, "class_name": "Discriminator(\n  (model): Sequential(\n    (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))\n    (1): LeakyReLU(negative_slope=0.2, inplace=True)\n    (2): Dropout2d(p=0.25, inplace=False)\n    (3): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))\n    (4): LeakyReLU(negative_slope=0.2, inplace=True)\n    (5): Dropout2d(p=0.25, inplace=False)\n    (6): BatchNorm2d(32, eps=0.8, momentum=0.1, affine=True, track_running_stats=True)\n    (7): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))\n    (8): LeakyReLU(negative_slope=0.2, inplace=True)\n    (9): Dropout2d(p=0.25, inplace=False)\n    (10): BatchNorm2d(64, eps=0.8, momentum=0.1, affine=True, track_running_stats=True)\n  )\n  (adv_layer): Sequential(\n    (0): Linear(in_features=1024, out_features=20, bias=True)\n    (1): LeakyReLU(negative_slope=0.2, inplace=True)\n  )\n  (adv_layer_2): Sequential(\n    (0): Linear(in_features=60, out_features=1, bias=True)\n    (1): Sigmoid()\n  )\n)", "parameters": [["model.0.weight", [16, 1, 3, 3]], ["model.0.bias", [16]], ["model.3.weight", [32, 16, 3, 3]], ["model.3.bias", [32]], ["model.6.weight", [32]], ["model.6.bias", [32]], ["model.7.weight", [64, 32, 3, 3]], ["model.7.bias", [64]], ["model.10.weight", [64]], ["model.10.bias", [64]], ["adv_layer.0.weight", [20, 1024]], ["adv_layer.0.bias", [20]], ["adv_layer_2.0.weight", [1, 60]], ["adv_layer_2.0.bias", [1]]], "output_shape": [[256, 1]], "num_parameters": [144, 16, 4608, 32, 32, 32, 18432, 64, 64, 64, 20480, 20, 60, 1]}], "edges": []}